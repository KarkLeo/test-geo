{"version":3,"sources":["logo.svg","services/navigator.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getCurrentPosition","setPosState","a","readPosition","position","navigator","geolocation","watchPosition","e","console","log","App","useState","pos","setPost","useEffect","getPosition","className","src","logo","alt","coords","latitude","longitude","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,MAA0B,iCCA5BA,G,MAAkB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACxBC,EAAe,SAACC,GAClBH,EAAaG,IAFa,SAI3BC,UAAUC,YAAYC,cAAcJ,GAAc,SAAAK,GAAC,OAAIC,QAAQC,IAAIF,MAJxC,2CAAH,uD,OCsChBG,MAjCf,WAAgB,IAAD,EAEUC,mBAAqC,MAF/C,mBAENC,EAFM,KAEDC,EAFC,KAYb,OAPAC,qBAAY,YACO,uCAAG,sBAAAb,EAAA,sEACjBF,EAAmBc,GADF,2CAAH,qDAGjBE,KACC,IAGD,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACxCP,GAAO,8CAAeA,EAAIQ,OAAOC,SAA1B,aAAuCT,EAAIQ,OAAOE,aAC1D,sCACO,+CADP,0BAGA,mBACEN,UAAU,WACVO,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCXOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a039d89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const getCurrentPosition = async (setPosState: (pos:null | GeolocationPosition ) => void): Promise<void> => {\r\n    const readPosition = (position: GeolocationPosition) => {\r\n        setPosState( position)\r\n    }\r\n await navigator.geolocation.watchPosition(readPosition, e => console.log(e))\r\n}","import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {getCurrentPosition} from \"./services/navigator\";\n\nfunction App() {\n\n  const [pos, setPost] = useState<null | GeolocationPosition>(null)\n\n\n  useEffect(  () => {\n    const getPosition = async ()=>  {\n await getCurrentPosition(setPost)\n    }\n    getPosition()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {pos && <b>{`coords: ${pos.coords.latitude}, ${pos.coords.longitude}`}</b>}\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}